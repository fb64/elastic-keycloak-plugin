buildscript {
    ext {
        pluginVersion = rootProject.properties['pluginVersion']
        esVersion = rootProject.properties['esVersion']
        keycloakVersion = '11.0.2'
        jacksonVersion = '2.8.11'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:$esVersion"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'

group 'org.elasticsearch.plugin'
version "${pluginVersion}_es${esVersion}"

ext{
    project.licenseFile = project.rootProject.file('LICENSE')
    project.noticeFile = project.rootProject.file('NOTICE')
    thirdPartyAudit.enabled = false
}

dependencyLicenses.enabled = false

esplugin {
    name 'keycloak-security'
    description 'Elasticsearch Keycloak security plugin'
    classname 'org.elasticsearch.plugin.keycloak.KeycloakSecurityPlugin'
    licenseFile rootProject.file('LICENSE')
    noticeFile rootProject.file('NOTICE')
    version project.version
    extendedPlugins = ['x-pack-security']
}

configurations.all {
    //avoid conflict by force version used by elastic
    resolutionStrategy {
        force 'org.apache.httpcomponents:httpcore:4.4.5'
        force 'commons-codec:commons-codec:1.10'
        force 'commons-logging:commons-logging:1.1.3'
    }
}

dependencies {
    compile "org.keycloak:keycloak-common:$keycloakVersion"
    compile "org.keycloak:keycloak-core:$keycloakVersion"
    compile "org.keycloak:keycloak-authz-client:$keycloakVersion"
    compile "org.keycloak:keycloak-adapter-spi:$keycloakVersion"
    compile "org.keycloak:keycloak-adapter-core:$keycloakVersion"
    compile 'org.bouncycastle:bcprov-jdk15on:1.60'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.60'

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    compile group: 'org.jboss.logging', name: 'jboss-logging', version: '3.3.2.Final'
    compile group: 'org.jboss.logmanager', name: 'jboss-logmanager', version: '1.5.2.Final'
    compile group: 'org.jboss.modules', name: 'jboss-modules', version: '1.1.0.GA'

    compileOnly group: 'javax.activation', name: 'activation', version: '1.1.1'
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.2'


    compileOnly "org.elasticsearch.plugin:x-pack-core:$esVersion"

    testCompile "org.elasticsearch.client:x-pack-transport:$esVersion"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


integTestRunner {
    systemProperty 'tests.security.manager', 'false'
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

configurations {
    published
}

def distro = file("build/distributions/keycloak-security-${pluginVersion}_es${esVersion}.zip")

artifacts {
    published file: distro, name: distro.getName(), type: 'zip'
}
task resolve doLast {
    configurations.generic.files
}
artifactory {
    contextUrl = "https://artifacts.corp.digitalreasoning.com:443/artifactory"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'managed-thirdparty-party'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
        defaults{
            publishConfigs('published')
            publishArtifacts = true
        }
    }
}
artifactoryPublish {
    dependsOn assemble
}



/*
integTestCluster {
    dependsOn buildZip

    //Keycloak realm configuration
    setting 'xpack.security.authc.realms.keycloak.order', '0'
    setting 'xpack.security.authc.realms.keycloak.type', 'keycloak'
    setting 'xpack.security.authc.realms.keycloak.config', 'keycloak.config'

    setting 'xpack.security.authc.realms.esusers.order', '1'
    setting 'xpack.security.authc.realms.esusers.type', 'file'
    setting 'xpack.security.authc.realms.native.type', 'native'
    setting 'xpack.security.authc.realms.native.order', '2'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.ml.enabled', 'false'
    setting 'xpack.monitoring.enabled', 'false'
    setting 'xpack.license.self_generated.type', 'trial'

    distribution = 'zip'


    //add keycloak config file for testing
    extraConfigFile 'keycloak.config',file("$rootDir/src/test/resources/config/keycloak.config")

    setupCommand 'setupDummyUser',
            'bin/elasticsearch-users', 'useradd', 'testor', '-p', 'password', '-r', 'superuser'

    waitCondition = { node, ant ->
        File tmpFile = new File(node.cwd, 'wait.success')
        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",
                dest: tmpFile.toString(),
                username: 'testor',
                password: 'password',
                ignoreerrors: true,
                retries: 10)
        return tmpFile.exists()
    }
}

check.dependsOn integTest */
